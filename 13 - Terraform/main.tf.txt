terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 4.0"
    }
  }

  backend "s3" { # Remote state storage in S3
    bucket = "terraformiacstatefile"
    key    = "ec2/terraform.tfstate"
    region = "ap-south-1"
  }
}

provider "aws" {
  region = "ap-south-1"
}

# ✅ Step 1: Generate an SSH Key Pair
resource "tls_private_key" "sshkey" {
  algorithm = "RSA"
  rsa_bits  = 4096
}

# 2. Save the SSH Private Key Locally
resource "local_file" "private_key" {
  content  = tls_private_key.sshkey.private_key_pem
  filename = "${path.module}/terraform_ssh_key.pem"
}

# ✅ Step 2: Create an AWS Key Pair using the Generated SSH Key
resource "aws_key_pair" "generated" {
  key_name   = "terraform-key"
  public_key = tls_private_key.sshkey.public_key_openssh
}

# ✅ Step 3: Create an EC2 Instance with the Generated Key
resource "aws_instance" "ec2" {
  ami           = "ami-00bb6a80f01f03502"
  instance_type = "t2.micro"
  key_name      = aws_key_pair.generated.key_name

  provisioner "remote-exec" { # ✅ Step 4: Install Nginx on EC2
    inline = [
      "sudo apt update",
      "sudo apt install -y nginx",
      "sudo systemctl start nginx"
    ]
  }

  connection { # SSH Connection using Terraform Generated Key
    type        = "ssh"
    user        = "ubuntu"
    private_key = tls_private_key.sshkey.private_key_pem
    host        = self.public_ip
  }

  tags = {
    Name = "Terraform-EC2"
  }
 
 provisioner "local-exec" {
  command = "echo 'EC2 Instance Created with IP: ${self.public_ip}'"
 }
}

output "ec2_public_ip" {
  value = aws_instance.ec2.public_ip
}

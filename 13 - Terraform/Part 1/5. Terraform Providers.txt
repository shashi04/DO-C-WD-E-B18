Terraform Providers
====================

A Terraform Provider is a plugin that allows Terraform to interact with APIs for cloud providers, SaaS platforms, or other services. Providers define the available resources and data sources that you can use in your Terraform configuration.


1. Common Terraform Providers
==============================

Here are some commonly used Terraform providers:

Provider
=========	
AWS (hashicorp/aws)	           Manages AWS resources like EC2, S3, and RDS.
Azure (hashicorp/azurerm)	   Manages Microsoft Azure resources.
Google Cloud (hashicorp/google)	   Manages Google Cloud resources.
Kubernetes (hashicorp/kubernetes)  Manages Kubernetes clusters.
Docker (kreuzwerker/docker)	   Manages Docker containers.
GitHub (integrations/github)	   Manages GitHub repositories and teams.

You can find all official providers in the Terraform Registry:

ðŸ”— https://registry.terraform.io/

==============================================================================================================================================================

2. How to Use a Provider
=========================

To use a provider in Terraform, follow these steps:

Step 1: Define the Provider
============================

In your Terraform configuration file (main.tf), specify the provider:

terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 5.0"
    }
  }
}

provider "aws" {
  region = "us-east-1"
}

Step 2: Initialize the Provider
================================

Run the following command to download and install the provider:

terraform init

==============================================================================================================================================================

3. Multiple Providers in One Configuration
===========================================

You can use multiple providers in a single Terraform configuration:

provider "aws" {
  region = "us-west-1"
}

provider "google" {
  project = "my-gcp-project"
  region  = "us-central1"
}

==============================================================================================================================================================

4. Provider Aliases
====================

If you need to use the same provider multiple times (e.g., for multiple AWS regions), you can use aliases:

provider "aws" {
  region = "us-east-1"
}

provider "aws" {
  alias  = "west"
  region = "us-west-1"
}

resource "aws_instance" "east_instance" {
  provider = aws
  ami      = "ami-123456"
  instance_type = "t2.micro"
}

resource "aws_instance" "west_instance" {
  provider = aws.west
  ami      = "ami-654321"
  instance_type = "t2.micro"
}

==============================================================================================================================================================

5. Finding and Updating Providers
==================================

To check installed providers:

terraform providers


To upgrade providers:

terraform init -upgrade



